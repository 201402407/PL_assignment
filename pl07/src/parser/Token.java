package parser;
//201402407 이해원
import java.util.HashMap;
import java.util.Map;

public class Token {
	private final TokenType type;
	private final String lexme;
	
	static Token ofName(String lexme) { // 토큰 문자들을 전부 읽고나서 실행하자.
		TokenType type = KEYWORDS.get(lexme);
		if(type != null) { // 해당 단어가 KEYWORDS에 존재하는 경우.
			return new Token(type, lexme); // 그대로 타입을 가져와 토큰 생성.
		}
		else if(lexme.endsWith("?")) { // ?로 끝나는 token(단어)인가 ?
			if(lexme.substring(0, lexme.length() - 1).contains("?")) { // 만약 ?가 맨 끝에 하나만 있는 것이 아닌, 중간에도 있는 경우의 예외처리.
				throw new ScannerException("invalid ID=" + lexme); // 예외 처리.
			}
			return new Token(TokenType.QUESTION, lexme); // QUESTION Tokentype로 정의.
		}
		else if(lexme.contains("?")) { // 문자 중간에 있는 ? 에 대한 예외 처리.
			throw new ScannerException("invalid ID=" + lexme);
		}
		else {
			return new Token(TokenType.ID, lexme); // ID type의 토큰 생성.
		}
	}
	
	Token(TokenType type, String lexme) {
		this.type = type;
		this.lexme = lexme;
	}
	
	public TokenType type() {
		return this.type;
	}
	
	public String lexme() {
		return this.lexme;
	}
	
	@Override
	public String toString() {
		return String.format("%s(%s)", type, lexme);
	}
	
	private static final Map<String,TokenType> KEYWORDS = new HashMap<>();
	static {
		KEYWORDS.put("define", TokenType.DEFINE);
		KEYWORDS.put("lambda", TokenType.LAMBDA);
		KEYWORDS.put("cond", TokenType.COND);
		KEYWORDS.put("quote", TokenType.QUOTE);
		KEYWORDS.put("not", TokenType.NOT);
		KEYWORDS.put("cdr", TokenType.CDR);
		KEYWORDS.put("car", TokenType.CAR);
		KEYWORDS.put("cons", TokenType.CONS);
		KEYWORDS.put("eq?", TokenType.EQ_Q);
		KEYWORDS.put("null?", TokenType.NULL_Q);
		KEYWORDS.put("atom?", TokenType.ATOM_Q);
	}
}
